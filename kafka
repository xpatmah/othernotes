Windows 

In summary, for Windows
Download and Setup Java 8 JDK

Download the Kafka binaries from https://kafka.apache.org/downloads

Extract Kafka at the root of C:\

Setup Kafka bins in the Environment variables section by editing Path

Try Kafka commands using kafka-topics.bat (for example)

Edit Zookeeper & Kafka configs using NotePad++ https://notepad-plus-plus.org/download/

zookeeper.properties: dataDir=C:/kafka_2.12-2.0.0/data/zookeeper (yes the slashes are inversed)

server.properties: log.dirs=C:/kafka_2.12-2.0.0/data/kafka (yes the slashes are inversed)

Start Zookeeper in one command line: zookeeper-server-start.bat config\zookeeper.properties

Start Kafka in another command line: kafka-server-start.bat config\server.properties


Important: For the rest of the course, don't forget to add the extension .bat to commands being run


In Linux

In summary, for Linux (ex: Ubuntu)
Download and Setup Java 8 JDK:

sudo apt install openjdk-8-jdk
Download & Extract the Kafka binaries from https://kafka.apache.org/downloads

Try Kafka commands using bin/kafka-topics.sh (for example)

Edit PATH to include Kafka (in ~/.bashrc for example) PATH="$PATH:/your/path/to/your/kafka/bin"

Edit Zookeeper & Kafka configs using a text editor

zookeeper.properties: dataDir=/your/path/to/data/zookeeper

server.properties: log.dirs=/your/path/to/data/kafka

Start Zookeeper in one terminal window: zookeeper-server-start.sh config/zookeeper.properties

Start Kafka in another terminal window: kafka-server-start.sh config/server.properties

Important: For the rest of the course, don't forget to add the extension .sh to commands being run


== kafka CLI ==

create the topics 

kafka-topics --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3 --replication-factor 1

(Note -: replication-factor can not be more that no of brokers as of now we have only started one broker)

list the topics 

kafka-topics --zookeeper 127.0.0.1:2181 --list

describe the topic

kafka-topics --zookeeper 127.0.0.1:2181 --topic first_topic --describe

create the topic with more partitions

kafka-topics --zookeeper 127.0.0.1:2181 --topic second_topic --create --partitions 6 --replication-factor 1

list the topics 

kafka-topics --zookeeper 127.0.0.1:2181 --list

delete the topic

kafka-topics --zookeeper 127.0.0.1:2181 --topic second_topic --delete

(By default the delete.topic.enable is set to true and it will delete the topic)


== kafka console producer ==

kafka-console-producer --broker-list 127.0.0.1:9092 --topic first_topic
> hello
>local
press cntrcl C

kafka-console-producer --broker-list 127.0.0.1:9092 --topic first_topic --producer-property acks=all
> hello
>local
press cntrcl C

kafka-console-producer --broker-list 127.0.0.1:9092 --topic new_topic --producer-property acks=all

if topic is not there and if you run this command as a result the topic will be created and then leader elction will happen

and partitions will be 1 you need to changes the num.partitions=1 in server.properties file if you want more topic to produce by default 


== kafka console consumer==

it listen the kafka topic to consume the message

kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic


if this consumer is down and topic has more message it wont read the previous messages until you will start it with the flag


kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --from-beginning


== kafka consumer group ==

it listen the kafka topic to consume the message with group only one consumer will reads 

kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --group my-first_application

kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --group my-first_application

below will read the message from beginning

kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --group my-second_application --from-beginning

if you start again with the same command it will not read from beginning because offset has been commited 


== kafka consumer group CLI ==

you can modify consumer groups 

kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --list

kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --describe --group my-first_application


== Reset the offset

kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --group my-first_application --reset-offsets --to-earliest --execute --topic first_topic


kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --group my-first_application --reset-offsets --shift-by -2 --execute --topic first_topic

--shift-by (+ve/-ve) +ve for forward -ve for backward
Producer with keys


kafka-console-producer --broker-list 127.0.0.1:9092 --topic first_topic --property parse.key=true --property key.separator=,
> key,value
> another key,another value

Consumer with keys

kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --from-beginning --property print.key=true --property key.separator=,

